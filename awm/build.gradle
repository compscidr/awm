group 'com.jasonernst'
version '1.1.23' + (Boolean.valueOf(System.getProperty("snapshot")) ? "-SNAPSHOT" : "")

buildscript {
    ext {

    }
    repositories {
        google()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.0-alpha14"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.7.1.1"
        classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0"
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.35"
        classpath "com.hiya:jacoco-android:0.2"
        classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.17.0-SNAPSHOT"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'com.hiya.jacoco-android'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 23
        versionName this.version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    lintOptions {
        abortOnError false
        warningsAsErrors false
        showAll true
        explainIssues true
        xmlOutput file("build/reports/lint/report.xml")
        htmlOutput file("build/reports/lint/report.html")
        disable "UnsafeExperimentalUsageError",
                "UnsafeExperimentalUsageWarning"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    //permissions
    implementation 'com.vanniktech:rxpermission:0.7.0'
    api 'com.github.anadea:rxbus:1.0.1'

    //concurrent set
    implementation 'com.google.guava:guava:30.1.1-jre'

    //play services for location
//    implementation ('com.google.android.gms:play-services-location:18.0.0') {
//        exclude group: "com.android.support"
//    }

    //noinspection AnnotationProcessorOnCompilePath
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    //unit and integration tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.1"
    testImplementation "org.mockito:mockito-core:3.9.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:5.7.1"

    //persistence
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'

    //logging
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    testAnnotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
}


repositories {
    google()
    mavenLocal()
    mavenCentral()
    jcenter()
}


task getVersion() {
    print version
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = group
                artifactId = 'awm'
                version = version
            }
            debug(MavenPublication) {
                from components.debug
                groupId = group
                artifactId = 'awm-debug'
                version = version
            }
        }
    }
    task updatePom(type: Copy) {
        from "$buildDir/publications/release/pom-default.xml"
        into "."
        rename ("pom-default.xml", "pom.xml")
        dependsOn(generatePomFileForReleasePublication)
    }
    build.dependsOn(updatePom)
}

apply from: '../checkstyle.gradle'
apply from: '../jacocoAndroid.gradle'